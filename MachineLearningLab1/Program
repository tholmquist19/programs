#!  /usr/bin/env python3



def binary_search_recursion(A, left, right, x):
    A=A[left:right+1]
    mid = (len(A)-1)/2
    mid = int(mid)
    if len(A)==0:
        return -1

    if A[mid] == x:
        return mid

    if x>A[mid]:
        A=A[mid+1:]
        return binary_search_recursion(A, left, right-mid+1, x)
    if x<A[mid]:
        A=A[:mid-1]
        return binary_search_recursion(A, left, right-mid+1, x)

    return -1

print(binary_search_recursion([5,6,7,8], 0, 3, 6))
print(binary_search_recursion([5,6,7,8], 0, 3, 4))
print(binary_search_recursion([5], 0, 0, 4))
print(binary_search_recursion([5], 0, 0, 5))
print(binary_search_recursion(['ab', 'bc', 'dba', 'foo'], 0, 3, 'bcd'))
print(binary_search_recursion(['ab', 'bc', 'dba', 'foo'], 0, 3,'bc'))
print(binary_search_recursion(['ab', 'bc', 'dba', 'foo'], 0, 3,'zoo'))
print(binary_search_recursion(['ab', 'bc', 'dba', 'foo'], 2, 3, 'aaa'))


#1
#-1
#-1
#0
#-1
#1
#-1
#-1
